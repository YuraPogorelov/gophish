{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","App","classes","useState","campaigns","setCampaigns","React","page","setPage","rowsPerPage","setRowsPerPage","useEffect","getCampaign","a","fetch","response","json","data","rowEvents","console","log","className","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","slice","map","camp","key","id","onClick","scope","name","created_date","results","length","Button","variant","color","size","status","style","green","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAmBMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAyGCC,EArGH,WACV,IAAMC,EAAUL,IADA,EAMkBM,mBAAS,IAN3B,mBAMTC,EANS,KAMEC,EANF,OAOkBF,mBAAS,IAP3B,gCAQkBA,oBAAS,IAR3B,gCASQA,oBAAS,IATjB,gCAWQG,IAAMH,SAAS,IAXvB,mBAWTI,EAXS,KAWHC,EAXG,OAYsBF,IAAMH,SAAS,GAZrC,mBAYTM,EAZS,KAYIC,EAZJ,KAiBhBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,yDAAD,OAlB5B,qEAiBkB,cACZC,EADY,gBAICA,EAASC,OAJV,OAIZC,EAJY,OAKlBZ,EAAaY,GALK,2CAAH,qDAiBXC,EAAY,WAIhBC,QAAQC,IAAI,SAGd,OACE,yBAAKC,UAAU,OACb,qHACA,6BACE,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOJ,UAAWnB,EAAQH,MAAO2B,aAAW,gBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,0GACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,6EACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,4EACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,wCACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,YAGJ,kBAACC,EAAA,EAAD,MACItB,EAAc,EACZL,EAAU4B,MACRzB,EAAOE,EACPF,EAAOE,EAAcA,GAEvBL,GACF6B,KAAI,SAACC,GAAD,OACJ,kBAACN,EAAA,EAAD,CAAUO,IAAKD,EAAKE,GAAIC,QAASnB,GAC/B,kBAACW,EAAA,EAAD,CAAWN,UAAU,KAAKe,MAAM,OAC7BJ,EAAKK,MAER,kBAACV,EAAA,EAAD,CAAWC,MAAM,UAAUI,EAAKM,cAChC,kBAACX,EAAA,EAAD,CAAWC,MAAM,UAAUI,EAAKO,QAAQC,QACxC,kBAACb,EAAA,EAAD,CAAWC,MAAM,UACf,kBAACa,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,KAAK,SAC7CZ,EAAKa,SAGV,kBAAClB,EAAA,EAAD,CAAWC,MAAM,UACf,kBAAC,IAAD,CAA0BkB,MAAO,CAAEH,MAAOI,IAAM,gBAO5D,kBAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5B5B,UAAU,MACV6B,MAAOhD,EAAUsC,OACjBjC,YAAaA,EACbF,KAAMA,EACN8C,aAhEiB,SAACC,EAAOC,GAC/B/C,EAAQ+C,IAgEFC,oBA7DwB,SAACF,GAC/B5C,EAAe+C,SAASH,EAAMI,OAAOC,MAAO,KAC5CnD,EAAQ,SCvDZoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2f2932f5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n//import Campaigns from './Campaigns';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//import DetailsIcon from '@material-ui/icons/Details';\r\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 600,\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  const API_KEY =\r\n    'd978956e7a866d2b0816575052fbea8ffc4bfc14cdc57a53c09a185609ef6bd9';\r\n\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    getCampaign();\r\n  }, []);\r\n\r\n  const getCampaign = async () => {\r\n    const response = await fetch(\r\n      `https://dash.kronshtatd.ru:323/api/campaigns/?api_key=${API_KEY}`\r\n    );\r\n    const data = await response.json();\r\n    setCampaigns(data);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const rowEvents = () => {\r\n    // onClick: (e, row) => {\r\n    //   console.log(row);\r\n    // },\r\n    console.log('tets')\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Список компаний</h1>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label='simple table'>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Название компании</TableCell>\r\n                <TableCell align='center'>Дата создания</TableCell>\r\n                <TableCell align='center'>Пользователи</TableCell>\r\n                <TableCell align='center'>Статус</TableCell>\r\n                <TableCell align='center'>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n                ? campaigns.slice(\r\n                    page * rowsPerPage,\r\n                    page * rowsPerPage + rowsPerPage\r\n                  )\r\n                : campaigns\r\n              ).map((camp) => (\r\n                <TableRow key={camp.id} onClick={rowEvents}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {camp.name}\r\n                  </TableCell>\r\n                  <TableCell align='center'>{camp.created_date}</TableCell>\r\n                  <TableCell align='center'>{camp.results.length}</TableCell>\r\n                  <TableCell align='center'>\r\n                    <Button variant='outlined' color='primary' size='small'>\r\n                      {camp.status}\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell align='center'>\r\n                    <SettingsApplicationsIcon style={{ color: green[500] }} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component='div'\r\n          count={campaigns.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}